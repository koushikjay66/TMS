allprojects {

	apply plugin: 'java'
	
	group 'de.uniba.dsg'
	version '1.0'
	
	sourceCompatibility = 1.8
	
	repositories {
	    mavenCentral()
	}
	
	if( it.name == 'shared' ) {
		sourceSets {
		    main {
		        java {
		            srcDir 'src/main/java'
		            srcDir 'src/generated/main/java'
		            srcDir 'src/generated/main/grpc'
		        }
		    }
		}
	}
	
	if( it.name == 'client' ) {
    	apply plugin: 'application'
    	
    	project.ext.defaultgenerateddir = file('src/generated/java')
		project.ext.defaultgenerateddir.mkdirs()
    	
    	sourceSets {
		    main {
		        java {
		            srcDir 'src/main/java'
		            srcDir project.ext.defaultgenerateddir
		        }
		    }
		}
    	
    	configurations {
			wstools
		}
	
    	dependencies {
    		compile project(':shared')
    		wstools group: 'com.sun.xml.ws', name: 'jaxws-tools', version: '2.3.2'
    	}
    	
		task wsimport(group: "WS tools", description: "execute wsimport task with a given wsdl location") {
			doLast{
				if (!project.hasProperty('wsdl')) {
					throw new GradleException('No wsdl location provided, please provide a wsdl location such as: \"wsimport -Pwsdl=\"http://localhost:8080/MyService?wsdl\"\"')
				} else {
					ant.taskdef(name: 'wsimport', classname: 'com.sun.tools.ws.ant.WsImport', classpath: configurations.wstools.asPath)
					ant.wsimport(wsdl: wsdl, 
						 		sourcedestdir: project.ext.defaultgenerateddir, 
						 		verbose: true)
				}
			}
		}
    }
    
    if (it.name == 'server') {
    	apply plugin: 'application'
    	
    	dependencies {
    		compile project(':shared')
    	}
    }
    
    

    dependencies {
        
        // for jax-ws
        compile group: 'com.sun.xml.ws', name: 'rt', version: '2.3.2'
        // for grpc
		compile 'io.grpc:grpc-netty-shaded:1.20.0'
	    compile 'io.grpc:grpc-protobuf:1.20.0'
	    compile 'io.grpc:grpc-stub:1.20.0'
	    compile "com.google.protobuf:protobuf-java-util:3.7.1"
		// for jms
	    compile 'org.glassfish.mq:imq:5.1'
    	compile 'com.sun.messaging.mq:fscontext:4.+'
	
	    testCompile group: 'junit', name: 'junit', version: '4.12'
    }

}


project(':client') {
	application {
	    mainClassName = 'de.uniba.rz.app.Main'
	}
	
	jar {
		manifest {
			attributes(
				'Main-Class': 'de.uniba.rz.app.Main'
			)
		}
	}
}

project(':server') {
	application {
	    mainClassName = 'de.uniba.rz.backend.TicketServerMain'
	}
	
	jar {
		manifest {
			attributes(
				'Main-Class': 'de.uniba.rz.backend.TicketServerMain'
			)
		}
	}
}

apply plugin: 'eclipse'
apply plugin: 'com.google.protobuf'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.7.1"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.20.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    generatedFilesBaseDir = "$projectDir/shared/src/generated"
}
